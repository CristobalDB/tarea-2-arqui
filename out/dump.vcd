$date
	Tue Oct  7 22:50:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! regA_out [7:0] $end
$var wire 8 " regB_out [7:0] $end
$var reg 1 # add_a_dir_test_failed $end
$var reg 1 $ clk $end
$var reg 1 % jeq_test_1_failed $end
$var reg 1 & mem_sequence_test_failed $end
$scope module Comp $end
$var wire 1 $ clk $end
$var wire 8 ' pc_load_val [7:0] $end
$var wire 8 ( srcB [7:0] $end
$var wire 8 ) srcA [7:0] $end
$var wire 8 * regB_out_bus [7:0] $end
$var wire 8 + regA_out_bus [7:0] $end
$var wire 8 , pc_out_bus [7:0] $end
$var wire 7 - opcode [6:0] $end
$var wire 8 . mem_out_bus [7:0] $end
$var wire 8 / mem_din [7:0] $end
$var wire 8 0 mem_addr [7:0] $end
$var wire 8 1 literal [7:0] $end
$var wire 15 2 im_out_bus [14:0] $end
$var wire 8 3 alu_out_bus [7:0] $end
$var wire 1 4 Z $end
$var wire 2 5 WSEL [1:0] $end
$var wire 1 6 V $end
$var wire 2 7 SB [1:0] $end
$var wire 2 8 SA [1:0] $end
$var wire 4 9 S [3:0] $end
$var wire 1 : N $end
$var wire 1 ; MW $end
$var wire 1 < MA $end
$var wire 1 = LP $end
$var wire 1 > LB $end
$var wire 1 ? LA $end
$var wire 1 @ C $end
$var reg 15 A IR [14:0] $end
$scope module ALU $end
$var wire 8 B a [7:0] $end
$var wire 8 C b [7:0] $end
$var wire 1 4 z $end
$var wire 4 D s [3:0] $end
$var wire 1 : n $end
$var reg 1 @ c $end
$var reg 9 E diff_ext [8:0] $end
$var reg 8 F out [7:0] $end
$var reg 9 G sum_ext [8:0] $end
$var reg 1 6 v $end
$upscope $end
$scope module CTRL $end
$var wire 1 @ C $end
$var wire 1 : N $end
$var wire 1 6 V $end
$var wire 1 4 Z $end
$var wire 7 H opcode [6:0] $end
$var parameter 4 I ADD $end
$var parameter 4 J AND_ $end
$var parameter 4 K INC $end
$var parameter 4 L NOT_ $end
$var parameter 4 M OR_ $end
$var parameter 2 N SA_A $end
$var parameter 2 O SA_B $end
$var parameter 2 P SA_U $end
$var parameter 2 Q SA_Z $end
$var parameter 2 R SB_A $end
$var parameter 2 S SB_B $end
$var parameter 2 T SB_L $end
$var parameter 2 U SB_M $end
$var parameter 4 V SHL $end
$var parameter 4 W SHR $end
$var parameter 4 X SUB $end
$var parameter 2 Y W_A $end
$var parameter 2 Z W_ALU $end
$var parameter 2 [ W_B $end
$var parameter 2 \ W_Z $end
$var parameter 4 ] XOR_ $end
$var reg 1 ? LA $end
$var reg 1 > LB $end
$var reg 1 = LP $end
$var reg 1 < MA $end
$var reg 1 ; MW $end
$var reg 4 ^ S [3:0] $end
$var reg 2 _ SA [1:0] $end
$var reg 2 ` SB [1:0] $end
$var reg 2 a WSEL [1:0] $end
$upscope $end
$scope module DM $end
$var wire 8 b addr [7:0] $end
$var wire 1 $ clk $end
$var wire 8 c din [7:0] $end
$var wire 8 d dout [7:0] $end
$var wire 1 ; we $end
$var parameter 32 e AW $end
$upscope $end
$scope module IM $end
$var wire 15 f out [14:0] $end
$var wire 8 g address [7:0] $end
$var parameter 32 h AW $end
$var parameter 32 i DW $end
$upscope $end
$scope module PC $end
$var wire 1 $ clk $end
$var wire 8 j din [7:0] $end
$var wire 1 = load $end
$var parameter 32 k N $end
$var reg 8 l pc [7:0] $end
$upscope $end
$scope module regA $end
$var wire 1 $ clk $end
$var wire 8 m data [7:0] $end
$var wire 1 ? load $end
$var parameter 32 n N $end
$var reg 8 o out [7:0] $end
$upscope $end
$scope module regB $end
$var wire 1 $ clk $end
$var wire 8 p data [7:0] $end
$var wire 1 > load $end
$var parameter 32 q N $end
$var reg 8 r out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 q
b1000 n
b1000 k
b1111 i
b1000 h
b1000 e
b101 ]
b11 \
b10 [
b0 Z
b1 Y
b1 X
b111 W
b110 V
b11 U
b1 T
b0 S
b10 R
b0 Q
b11 P
b10 O
b1 N
b11 M
b100 L
b1000 K
b10 J
b0 I
$end
#0
$dumpvars
b0 r
b0 p
b0 o
b0 m
b11111111 l
bx j
b11111111 g
bx f
bx d
b0 c
bx b
b0 a
b0 `
b0 _
b0 ^
bx H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
bx A
0@
0?
0>
0=
0<
0;
0:
b0 9
b0 8
b0 7
06
b0 5
14
b0 3
bx 2
bx 1
bx 0
b0 /
bx .
bx -
b11111111 ,
b0 +
b0 *
b0 )
b0 (
bx '
0&
0%
0$
0#
b0 "
b0 !
$end
#1
b1101100011 2
b1101100011 f
b0 ,
b0 g
b0 l
1$
#2
0$
1&
#3
0:
b1100011 /
b1100011 c
06
0@
04
b1100011 3
b1100011 F
b1100011 m
b1100011 p
b1100011 G
b1100011 (
b1100011 C
b1 7
b1 `
1>
b1100011 0
b1100011 b
b11 -
b11 H
b1100011 '
b1100011 j
b1100011 1
b1101100011 A
b10100000110010 2
b10100000110010 f
b1 ,
b1 g
b1 l
1$
#4
0$
#5
b1100011 /
b1100011 c
b10 5
b10 a
1;
b0 7
b0 `
0>
b110010 0
b110010 b
b101000 -
b101000 H
b110010 '
b110010 j
b110010 1
b10010100110010 2
b10010100110010 f
b10 ,
b10 g
b10 l
b1100011 "
b1100011 *
b1100011 r
b10100000110010 A
1$
#6
0$
#7
b11 7
b11 `
1?
b0 5
b0 a
0;
b100101 -
b100101 H
b10010100110010 A
b1100011 .
b1100011 d
b1001111011 2
b1001111011 f
b11 ,
b11 g
b11 l
1$
#8
0$
#9
b1111011 /
b1111011 c
b1111011 G
04
b1111011 3
b1111011 F
b1111011 m
b1111011 p
b1111011 (
b1111011 C
b1 7
b1 `
1?
bx .
bx d
b1111011 0
b1111011 b
b10 -
b10 H
b1111011 '
b1111011 j
b1111011 1
b10011100110011 2
b10011100110011 f
b100 ,
b100 g
b100 l
b1100011 !
b1100011 +
b1100011 o
b1001111011 A
1$
#10
0$
#11
b1100011 G
04
b1100011 3
b1100011 F
b1100011 m
b1100011 p
b1111011 /
b1111011 c
b1100011 (
b1100011 C
b1 5
b1 a
1;
b0 7
b0 `
0?
b110011 0
b110011 b
b100111 -
b100111 H
b110011 '
b110011 j
b110011 1
b10011100110011 A
b1111011 !
b1111011 +
b1111011 o
b10011000110011 2
b10011000110011 f
b101 ,
b101 g
b101 l
1$
#12
0$
#13
b1111011 G
04
b1111011 3
b1111011 F
b1111011 m
b1111011 p
b1111011 (
b1111011 C
b1111011 /
b1111011 c
b11 7
b11 `
1>
b0 5
b0 a
0;
b100110 -
b100110 H
b1011111111 2
b1011111111 f
b110 ,
b110 g
b110 l
b1111011 .
b1111011 d
b10011000110011 A
1$
#14
0$
#15
1:
b11111111 /
b11111111 c
b11111111 G
04
b11111111 3
b11111111 F
b11111111 m
b11111111 p
b11111111 (
b11111111 C
1?
b1 7
b1 `
0>
bx .
bx d
b11111111 0
b11111111 b
b10 -
b10 H
b11111111 '
b11111111 j
b11111111 1
b1011111111 A
b1111011 "
b1111011 *
b1111011 r
b10011100110010 2
b10011100110010 f
b111 ,
b111 g
b111 l
1$
#16
0$
#17
0:
b1111011 G
04
b1111011 3
b1111011 F
b1111011 m
b1111011 p
b11111111 /
b11111111 c
b1111011 (
b1111011 C
b1 5
b1 a
1;
b0 7
b0 `
0?
b1100011 .
b1100011 d
b110010 0
b110010 b
b100111 -
b100111 H
b110010 '
b110010 j
b110010 1
b1000000000 2
b1000000000 f
b1000 ,
b1000 g
b1000 l
b11111111 !
b11111111 +
b11111111 o
b10011100110010 A
1$
#18
0$
#19
0:
b0 G
14
b0 3
b0 F
b0 m
b0 p
b0 (
b0 C
b0 /
b0 c
b1 7
b1 `
1?
b0 5
b0 a
0;
b0 0
b0 b
b10 -
b10 H
b0 '
b0 j
b0 1
b1000000000 A
bx .
bx d
b10010100110010 2
b10010100110010 f
b1001 ,
b1001 g
b1001 l
1$
#20
0$
#21
1:
b11111111 /
b11111111 c
04
b11111111 3
b11111111 F
b11111111 m
b11111111 p
b11111111 G
b11111111 (
b11111111 C
b11 7
b11 `
1?
b11111111 .
b11111111 d
b110010 0
b110010 b
b100101 -
b100101 H
b110010 '
b110010 j
b110010 1
b1001100100 2
b1001100100 f
b1010 ,
b1010 g
b1010 l
b0 !
b0 +
b0 o
b10010100110010 A
1$
#22
0$
1#
#23
0:
b1100100 /
b1100100 c
b1100100 G
04
b1100100 3
b1100100 F
b1100100 m
b1100100 p
b1100100 (
b1100100 C
b1 7
b1 `
1?
bx .
bx d
b1100100 0
b1100100 b
b10 -
b10 H
b1100100 '
b1100100 j
b1100100 1
b1001100100 A
b11111111 !
b11111111 +
b11111111 o
b1100110010 2
b1100110010 f
b1011 ,
b1011 g
b1011 l
1$
#24
0$
#25
b110010 /
b110010 c
b110010 G
04
b110010 3
b110010 F
b110010 m
b110010 p
b110010 (
b110010 C
1>
b1 7
b1 `
0?
b11111111 .
b11111111 d
b110010 0
b110010 b
b11 -
b11 H
b110010 '
b110010 j
b110010 1
b10100001111000 2
b10100001111000 f
b1100 ,
b1100 g
b1100 l
b1100100 !
b1100100 +
b1100100 o
b1100110010 A
1$
#26
0$
#27
b110010 /
b110010 c
b10 5
b10 a
1;
b0 7
b0 `
0>
bx .
bx d
b1111000 0
b1111000 b
b101000 -
b101000 H
b1111000 '
b1111000 j
b1111000 1
b10100001111000 A
b110010 "
b110010 *
b110010 r
b10110001111000 2
b10110001111000 f
b1101 ,
b1101 g
b1101 l
1$
#28
0$
#29
1:
16
b10010110 /
b10010110 c
b10010110 G
04
b10010110 3
b10010110 F
b10010110 m
b10010110 p
b1100100 )
b1100100 B
b11 7
b11 `
b1 8
b1 _
1?
b0 5
b0 a
0;
b101100 -
b101100 H
b1000011001 2
b1000011001 f
b1110 ,
b1110 g
b1110 l
b110010 .
b110010 d
b10110001111000 A
1$
#30
0$
#31
0:
b11001 (
b11001 C
b11001 /
b11001 c
b11001 G
06
04
b11001 3
b11001 F
b11001 m
b11001 p
b1 7
b1 `
b0 8
b0 _
1?
bx .
bx d
b11001 0
b11001 b
b0 )
b0 B
b10 -
b10 H
b11001 '
b11001 j
b11001 1
b1000011001 A
b10010110 !
b10010110 +
b10010110 o
b1100011001 2
b1100011001 f
b1111 ,
b1111 g
b1111 l
1$
#32
0$
#33
1>
b1 7
b1 `
0?
b11 -
b11 H
b100110100000000 2
b100110100000000 f
b10000 ,
b10000 g
b10000 l
b11001 !
b11001 +
b11001 o
b1100011001 A
1$
#34
0$
#35
0:
b0 /
b0 c
0@
b0 E
b0 G
14
b0 3
b0 F
b0 m
b0 p
b11001 )
b11001 B
b1 9
b1 D
b1 ^
b1 8
b1 _
b0 7
b0 `
0>
b0 0
b0 b
b1001101 -
b1001101 H
b0 '
b0 j
b0 1
b100110100000000 A
b11001 "
b11001 *
b11001 r
b101010000010100 2
b101010000010100 f
b10001 ,
b10001 g
b10001 l
1$
#36
0$
#37
b11001 /
b11001 c
04
b11001 3
b11001 F
b11001 m
b11001 p
b11001 G
b0 )
b0 B
0=
b0 9
b0 D
b0 ^
b0 8
b0 _
b10100 0
b10100 b
b1010100 -
b1010100 H
b10100 '
b10100 j
b10100 1
b1100000010 2
b1100000010 f
b10010 ,
b10010 g
b10010 l
b101010000010100 A
1$
#38
0$
#39
0:
b10 /
b10 c
06
0@
b10 G
04
b10 3
b10 F
b10 m
b10 p
b10 (
b10 C
b1 7
b1 `
1>
b10 0
b10 b
b11 -
b11 H
b10 '
b10 j
b10 1
b1100000010 A
b101000000010101 2
b101000000010101 f
b10011 ,
b10011 g
b10011 l
1$
#40
0$
#41
